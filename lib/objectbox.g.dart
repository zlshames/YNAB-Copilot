// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'database/models/app_settings.dart';
import 'database/models/ynab/account.dart';
import 'database/models/ynab/budget.dart';
import 'database/models/ynab/category.dart';
import 'database/models/ynab/category_group.dart';
import 'database/models/ynab/subtransaction.dart';
import 'database/models/ynab/transaction.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 8009773023880387484),
      name: 'AppSettings',
      lastPropertyId: const obx_int.IdUid(4, 5658462898567720132),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5986591697150326033),
            name: 'obxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2628080303905041359),
            name: 'name',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(1, 1882897864193672708)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7826005732730155755),
            name: 'dbValue',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5658462898567720132),
            name: 'dbType',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 9099226299015750521),
      name: 'YnabAccount',
      lastPropertyId: const obx_int.IdUid(15, 6877836895623230633),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 506626931879951278),
            name: 'obxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2722689509117450803),
            name: 'id',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(2, 6620463193629919140)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 643434713618667343),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3974168587549502003),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 174759358623979128),
            name: 'onBudget',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5081346077179695038),
            name: 'closed',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8665266025786795999),
            name: 'note',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 5565022873526810488),
            name: 'balance',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 9162075908193874075),
            name: 'clearedBalance',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 128136032341576339),
            name: 'unclearedBalance',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 369909157027804949),
            name: 'transferPayeeId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 7609897545249048188),
            name: 'directImportLinked',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 4742658715022415597),
            name: 'directImportInError',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 4541584853452792992),
            name: 'lastReconciledAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 6877836895623230633),
            name: 'deleted',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 2728133566777727042),
      name: 'YnabBudget',
      lastPropertyId: const obx_int.IdUid(8, 7635066501185977439),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8288114236344965762),
            name: 'obxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8783666564189731669),
            name: 'id',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(3, 1660748735420196765)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 104537903398975156),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 472559825807652889),
            name: 'lastModifiedOn',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8252976487324385604),
            name: 'firstMonth',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2557117895483678636),
            name: 'lastMonth',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4385220126947474251),
            name: 'dateFormat',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7635066501185977439),
            name: 'dbCurrencyFormat',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 8684354414354134273),
      name: 'YnabCategory',
      lastPropertyId: const obx_int.IdUid(23, 3358785356470027818),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1041348234559030917),
            name: 'obxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8846945547378239992),
            name: 'id',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(4, 4819558670930662)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5078074809548317315),
            name: 'categoryGroupId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(5, 3963198259894844802),
            relationTarget: 'YnabCategoryGroup'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2632631456714881235),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4142070331480669496),
            name: 'hidden',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7726916612616497362),
            name: 'originalCategoryGroupId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8679661070024275924),
            name: 'note',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 2872004630108205810),
            name: 'budgeted',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3096696659944804420),
            name: 'activity',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 2157952652969883380),
            name: 'balance',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 8925409113658282058),
            name: 'goalType',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 2033703006499929343),
            name: 'goalDay',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 556252096161432887),
            name: 'goalCadence',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 52120375029815823),
            name: 'goalCadenceFrequency',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 4442205919704331721),
            name: 'goalCreationMonth',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 2148618687529459471),
            name: 'goalTarget',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 4692813452379291398),
            name: 'goalTargetMonth',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 8311737759958860821),
            name: 'goalPercentageComplete',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 4760997985413027139),
            name: 'goalMonthsToBudget',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 8146950789686412338),
            name: 'goalUnderFunded',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 7162009509802964479),
            name: 'goalOverallFunded',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 2313570134528805442),
            name: 'goalOverallLeft',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 3358785356470027818),
            name: 'deleted',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 4515509234057584034),
      name: 'YnabCategoryGroup',
      lastPropertyId: const obx_int.IdUid(5, 3451567236181835387),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3031422889092891919),
            name: 'obxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1597063550422231350),
            name: 'id',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(6, 4806106113436043603)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2673592497440386650),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7215673092056275242),
            name: 'hidden',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3451567236181835387),
            name: 'deleted',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'categories',
            srcEntity: 'YnabCategory',
            srcField: 'categoryGroup')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 9051881836018150645),
      name: 'YnabSubtransaction',
      lastPropertyId: const obx_int.IdUid(11, 8009383013221395148),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6765856281216121554),
            name: 'obxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 816467891486058525),
            name: 'id',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(7, 5071104978291296538)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1118988764876259555),
            name: 'amount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1284975069531912111),
            name: 'memo',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4627530022054984349),
            name: 'payeeId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8561729726141671495),
            name: 'payeeName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6052091990663573309),
            name: 'deleted',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 5439078851688784190),
            name: 'transferAccountIdId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(8, 9096757154889785999),
            relationTarget: 'YnabAccount'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3723673266836611688),
            name: 'transferTransactionIdId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(9, 1768801739100895963),
            relationTarget: 'YnabTransaction'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 1317986166112416888),
            name: 'categoryId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(10, 733413646145652471),
            relationTarget: 'YnabCategory'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 8009383013221395148),
            name: 'transactionId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(11, 6277789107197813639),
            relationTarget: 'YnabTransaction')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 7326096151150241911),
      name: 'YnabTransaction',
      lastPropertyId: const obx_int.IdUid(22, 3247521342410708124),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3861644523190348012),
            name: 'obxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7781234296512293509),
            name: 'id',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(12, 3697079780850172687)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5534310149352722106),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 970956925868011565),
            name: 'amount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7365155702634630901),
            name: 'memo',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6524709898920484556),
            name: 'cleared',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5534389448934677764),
            name: 'approved',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 2859226355746337807),
            name: 'flagColor',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 901584724790794213),
            name: 'flagName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 501753359893315049),
            name: 'accountId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 4511849635865509936),
            name: 'accountName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 8622928628662593795),
            name: 'payeeId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 4074182122457685295),
            name: 'payeeName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 1488788011953485056),
            name: 'matchedTransactionId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 2408482852457554184),
            name: 'importId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 5476206450835807885),
            name: 'importPayeeName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 7329871619996717194),
            name: 'importPayeeNameOriginal',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 8953850399649507992),
            name: 'debtTransactionType',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 1628976300171203164),
            name: 'deleted',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 5395629101747115663),
            name: 'transferAccountIdId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(13, 1548862100430611478),
            relationTarget: 'YnabAccount'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 3586684026701440609),
            name: 'transferTransactionIdId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(14, 1788957800112914077),
            relationTarget: 'YnabTransaction'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 3247521342410708124),
            name: 'categoryId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(15, 7520067353880838246),
            relationTarget: 'YnabCategory')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'subtransactions',
            srcEntity: 'YnabSubtransaction',
            srcField: 'transaction')
      ])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(7, 7326096151150241911),
      lastIndexId: const obx_int.IdUid(15, 7520067353880838246),
      lastRelationId: const obx_int.IdUid(1, 3888083274112753803),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [3888083274112753803],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AppSettings: obx_int.EntityDefinition<AppSettings>(
        model: _entities[0],
        toOneRelations: (AppSettings object) => [],
        toManyRelations: (AppSettings object) => {},
        getId: (AppSettings object) => object.obxId,
        setId: (AppSettings object, int id) {
          object.obxId = id;
        },
        objectToFB: (AppSettings object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final dbValueOffset = fbb.writeString(object.dbValue);
          fbb.startTable(5);
          fbb.addInt64(0, object.obxId);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, dbValueOffset);
          fbb.addInt64(3, object.dbType);
          fbb.finish(fbb.endTable());
          return object.obxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = AppSettings(name: nameParam)
            ..obxId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..dbValue = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 8, '')
            ..dbType = const fb.Int64Reader()
                .vTableGetNullable(buffer, rootOffset, 10);

          return object;
        }),
    YnabAccount: obx_int.EntityDefinition<YnabAccount>(
        model: _entities[1],
        toOneRelations: (YnabAccount object) => [],
        toManyRelations: (YnabAccount object) => {},
        getId: (YnabAccount object) => object.obxId,
        setId: (YnabAccount object, int id) {
          object.obxId = id;
        },
        objectToFB: (YnabAccount object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final nameOffset = fbb.writeString(object.name);
          final typeOffset = fbb.writeString(object.type);
          final noteOffset =
              object.note == null ? null : fbb.writeString(object.note!);
          final transferPayeeIdOffset = object.transferPayeeId == null
              ? null
              : fbb.writeString(object.transferPayeeId!);
          fbb.startTable(16);
          fbb.addInt64(0, object.obxId);
          fbb.addOffset(1, idOffset);
          fbb.addOffset(2, nameOffset);
          fbb.addOffset(3, typeOffset);
          fbb.addBool(4, object.onBudget);
          fbb.addBool(5, object.closed);
          fbb.addOffset(6, noteOffset);
          fbb.addInt64(7, object.balance);
          fbb.addInt64(8, object.clearedBalance);
          fbb.addInt64(9, object.unclearedBalance);
          fbb.addOffset(10, transferPayeeIdOffset);
          fbb.addBool(11, object.directImportLinked);
          fbb.addBool(12, object.directImportInError);
          fbb.addInt64(13, object.lastReconciledAt?.millisecondsSinceEpoch);
          fbb.addBool(14, object.deleted);
          fbb.finish(fbb.endTable());
          return object.obxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final lastReconciledAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 30);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final onBudgetParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final closedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final noteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final balanceParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final clearedBalanceParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final unclearedBalanceParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final transferPayeeIdParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 24);
          final directImportLinkedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 26, false);
          final directImportInErrorParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 28, false);
          final lastReconciledAtParam = lastReconciledAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(lastReconciledAtValue);
          final deletedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 32, false);
          final object = YnabAccount(
              id: idParam,
              name: nameParam,
              type: typeParam,
              onBudget: onBudgetParam,
              closed: closedParam,
              note: noteParam,
              balance: balanceParam,
              clearedBalance: clearedBalanceParam,
              unclearedBalance: unclearedBalanceParam,
              transferPayeeId: transferPayeeIdParam,
              directImportLinked: directImportLinkedParam,
              directImportInError: directImportInErrorParam,
              lastReconciledAt: lastReconciledAtParam,
              deleted: deletedParam)
            ..obxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    YnabBudget: obx_int.EntityDefinition<YnabBudget>(
        model: _entities[2],
        toOneRelations: (YnabBudget object) => [],
        toManyRelations: (YnabBudget object) => {},
        getId: (YnabBudget object) => object.obxId,
        setId: (YnabBudget object, int id) {
          object.obxId = id;
        },
        objectToFB: (YnabBudget object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final nameOffset = fbb.writeString(object.name);
          final firstMonthOffset = fbb.writeString(object.firstMonth);
          final lastMonthOffset = fbb.writeString(object.lastMonth);
          final dateFormatOffset = fbb.writeString(object.dateFormat);
          final dbCurrencyFormatOffset = object.dbCurrencyFormat == null
              ? null
              : fbb.writeString(object.dbCurrencyFormat!);
          fbb.startTable(9);
          fbb.addInt64(0, object.obxId);
          fbb.addOffset(1, idOffset);
          fbb.addOffset(2, nameOffset);
          fbb.addInt64(3, object.lastModifiedOn.millisecondsSinceEpoch);
          fbb.addOffset(4, firstMonthOffset);
          fbb.addOffset(5, lastMonthOffset);
          fbb.addOffset(6, dateFormatOffset);
          fbb.addOffset(7, dbCurrencyFormatOffset);
          fbb.finish(fbb.endTable());
          return object.obxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final lastModifiedOnParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0));
          final firstMonthParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final lastMonthParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final dateFormatParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final object = YnabBudget(
              id: idParam,
              name: nameParam,
              lastModifiedOn: lastModifiedOnParam,
              firstMonth: firstMonthParam,
              lastMonth: lastMonthParam,
              dateFormat: dateFormatParam)
            ..obxId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..dbCurrencyFormat = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 18);

          return object;
        }),
    YnabCategory: obx_int.EntityDefinition<YnabCategory>(
        model: _entities[3],
        toOneRelations: (YnabCategory object) => [object.categoryGroup],
        toManyRelations: (YnabCategory object) => {},
        getId: (YnabCategory object) => object.obxId,
        setId: (YnabCategory object, int id) {
          object.obxId = id;
        },
        objectToFB: (YnabCategory object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final nameOffset = fbb.writeString(object.name);
          final originalCategoryGroupIdOffset =
              object.originalCategoryGroupId == null
                  ? null
                  : fbb.writeString(object.originalCategoryGroupId!);
          final noteOffset =
              object.note == null ? null : fbb.writeString(object.note!);
          final goalTypeOffset = object.goalType == null
              ? null
              : fbb.writeString(object.goalType!);
          final goalDayOffset =
              object.goalDay == null ? null : fbb.writeString(object.goalDay!);
          final goalCreationMonthOffset = object.goalCreationMonth == null
              ? null
              : fbb.writeString(object.goalCreationMonth!);
          final goalTargetMonthOffset = object.goalTargetMonth == null
              ? null
              : fbb.writeString(object.goalTargetMonth!);
          fbb.startTable(24);
          fbb.addInt64(0, object.obxId);
          fbb.addOffset(1, idOffset);
          fbb.addInt64(2, object.categoryGroup.targetId);
          fbb.addOffset(3, nameOffset);
          fbb.addBool(4, object.hidden);
          fbb.addOffset(5, originalCategoryGroupIdOffset);
          fbb.addOffset(6, noteOffset);
          fbb.addInt64(7, object.budgeted);
          fbb.addInt64(8, object.activity);
          fbb.addInt64(9, object.balance);
          fbb.addOffset(10, goalTypeOffset);
          fbb.addOffset(11, goalDayOffset);
          fbb.addInt64(12, object.goalCadence);
          fbb.addInt64(13, object.goalCadenceFrequency);
          fbb.addOffset(14, goalCreationMonthOffset);
          fbb.addInt64(15, object.goalTarget);
          fbb.addOffset(16, goalTargetMonthOffset);
          fbb.addInt64(17, object.goalPercentageComplete);
          fbb.addInt64(18, object.goalMonthsToBudget);
          fbb.addInt64(19, object.goalUnderFunded);
          fbb.addInt64(20, object.goalOverallFunded);
          fbb.addInt64(21, object.goalOverallLeft);
          fbb.addBool(22, object.deleted);
          fbb.finish(fbb.endTable());
          return object.obxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final hiddenParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final originalCategoryGroupIdParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 14);
          final noteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final budgetedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final activityParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final balanceParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final goalTypeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 24);
          final goalDayParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 26);
          final goalCadenceParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 28);
          final goalCadenceFrequencyParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 30);
          final goalCreationMonthParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 32);
          final goalTargetParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 34, 0);
          final goalTargetMonthParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 36);
          final goalPercentageCompleteParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 38);
          final goalMonthsToBudgetParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 40);
          final goalUnderFundedParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 42);
          final goalOverallFundedParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 44);
          final goalOverallLeftParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 46);
          final deletedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 48, false);
          final object = YnabCategory(
              id: idParam,
              name: nameParam,
              hidden: hiddenParam,
              originalCategoryGroupId: originalCategoryGroupIdParam,
              note: noteParam,
              budgeted: budgetedParam,
              activity: activityParam,
              balance: balanceParam,
              goalType: goalTypeParam,
              goalDay: goalDayParam,
              goalCadence: goalCadenceParam,
              goalCadenceFrequency: goalCadenceFrequencyParam,
              goalCreationMonth: goalCreationMonthParam,
              goalTarget: goalTargetParam,
              goalTargetMonth: goalTargetMonthParam,
              goalPercentageComplete: goalPercentageCompleteParam,
              goalMonthsToBudget: goalMonthsToBudgetParam,
              goalUnderFunded: goalUnderFundedParam,
              goalOverallFunded: goalOverallFundedParam,
              goalOverallLeft: goalOverallLeftParam,
              deleted: deletedParam)
            ..obxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.categoryGroup.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.categoryGroup.attach(store);
          return object;
        }),
    YnabCategoryGroup: obx_int.EntityDefinition<YnabCategoryGroup>(
        model: _entities[4],
        toOneRelations: (YnabCategoryGroup object) => [],
        toManyRelations: (YnabCategoryGroup object) => {
              obx_int.RelInfo<YnabCategory>.toOneBacklink(3, object.obxId,
                      (YnabCategory srcObject) => srcObject.categoryGroup):
                  object.categories
            },
        getId: (YnabCategoryGroup object) => object.obxId,
        setId: (YnabCategoryGroup object, int id) {
          object.obxId = id;
        },
        objectToFB: (YnabCategoryGroup object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(6);
          fbb.addInt64(0, object.obxId);
          fbb.addOffset(1, idOffset);
          fbb.addOffset(2, nameOffset);
          fbb.addBool(3, object.hidden);
          fbb.addBool(4, object.deleted);
          fbb.finish(fbb.endTable());
          return object.obxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final hiddenParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final deletedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final object = YnabCategoryGroup(
              id: idParam,
              name: nameParam,
              hidden: hiddenParam,
              deleted: deletedParam)
            ..obxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          obx_int.InternalToManyAccess.setRelInfo<YnabCategoryGroup>(
              object.categories,
              store,
              obx_int.RelInfo<YnabCategory>.toOneBacklink(3, object.obxId,
                  (YnabCategory srcObject) => srcObject.categoryGroup));
          return object;
        }),
    YnabSubtransaction: obx_int.EntityDefinition<YnabSubtransaction>(
        model: _entities[5],
        toOneRelations: (YnabSubtransaction object) => [
              object.transferAccountId,
              object.transferTransactionId,
              object.category,
              object.transaction
            ],
        toManyRelations: (YnabSubtransaction object) => {},
        getId: (YnabSubtransaction object) => object.obxId,
        setId: (YnabSubtransaction object, int id) {
          object.obxId = id;
        },
        objectToFB: (YnabSubtransaction object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final memoOffset =
              object.memo == null ? null : fbb.writeString(object.memo!);
          final payeeIdOffset =
              object.payeeId == null ? null : fbb.writeString(object.payeeId!);
          final payeeNameOffset = object.payeeName == null
              ? null
              : fbb.writeString(object.payeeName!);
          fbb.startTable(12);
          fbb.addInt64(0, object.obxId);
          fbb.addOffset(1, idOffset);
          fbb.addInt64(2, object.amount);
          fbb.addOffset(3, memoOffset);
          fbb.addOffset(4, payeeIdOffset);
          fbb.addOffset(5, payeeNameOffset);
          fbb.addBool(6, object.deleted);
          fbb.addInt64(7, object.transferAccountId.targetId);
          fbb.addInt64(8, object.transferTransactionId.targetId);
          fbb.addInt64(9, object.category.targetId);
          fbb.addInt64(10, object.transaction.targetId);
          fbb.finish(fbb.endTable());
          return object.obxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final amountParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final memoParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final payeeIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final payeeNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final deletedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 16, false);
          final object = YnabSubtransaction(
              id: idParam,
              amount: amountParam,
              memo: memoParam,
              payeeId: payeeIdParam,
              payeeName: payeeNameParam,
              deleted: deletedParam)
            ..obxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.transferAccountId.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.transferAccountId.attach(store);
          object.transferTransactionId.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.transferTransactionId.attach(store);
          object.category.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.category.attach(store);
          object.transaction.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.transaction.attach(store);
          return object;
        }),
    YnabTransaction: obx_int.EntityDefinition<YnabTransaction>(
        model: _entities[6],
        toOneRelations: (YnabTransaction object) => [
              object.transferAccountId,
              object.transferTransactionId,
              object.category
            ],
        toManyRelations: (YnabTransaction object) => {
              obx_int.RelInfo<YnabSubtransaction>.toOneBacklink(
                      11,
                      object.obxId,
                      (YnabSubtransaction srcObject) => srcObject.transaction):
                  object.subtransactions
            },
        getId: (YnabTransaction object) => object.obxId,
        setId: (YnabTransaction object, int id) {
          object.obxId = id;
        },
        objectToFB: (YnabTransaction object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final memoOffset =
              object.memo == null ? null : fbb.writeString(object.memo!);
          final clearedOffset = fbb.writeString(object.cleared);
          final flagColorOffset = object.flagColor == null
              ? null
              : fbb.writeString(object.flagColor!);
          final flagNameOffset = object.flagName == null
              ? null
              : fbb.writeString(object.flagName!);
          final accountIdOffset = fbb.writeString(object.accountId);
          final accountNameOffset = fbb.writeString(object.accountName);
          final payeeIdOffset =
              object.payeeId == null ? null : fbb.writeString(object.payeeId!);
          final payeeNameOffset = object.payeeName == null
              ? null
              : fbb.writeString(object.payeeName!);
          final matchedTransactionIdOffset = object.matchedTransactionId == null
              ? null
              : fbb.writeString(object.matchedTransactionId!);
          final importIdOffset = object.importId == null
              ? null
              : fbb.writeString(object.importId!);
          final importPayeeNameOffset = object.importPayeeName == null
              ? null
              : fbb.writeString(object.importPayeeName!);
          final importPayeeNameOriginalOffset =
              object.importPayeeNameOriginal == null
                  ? null
                  : fbb.writeString(object.importPayeeNameOriginal!);
          final debtTransactionTypeOffset = object.debtTransactionType == null
              ? null
              : fbb.writeString(object.debtTransactionType!);
          fbb.startTable(23);
          fbb.addInt64(0, object.obxId);
          fbb.addOffset(1, idOffset);
          fbb.addInt64(2, object.date.millisecondsSinceEpoch);
          fbb.addInt64(3, object.amount);
          fbb.addOffset(4, memoOffset);
          fbb.addOffset(5, clearedOffset);
          fbb.addBool(6, object.approved);
          fbb.addOffset(7, flagColorOffset);
          fbb.addOffset(8, flagNameOffset);
          fbb.addOffset(9, accountIdOffset);
          fbb.addOffset(10, accountNameOffset);
          fbb.addOffset(11, payeeIdOffset);
          fbb.addOffset(12, payeeNameOffset);
          fbb.addOffset(13, matchedTransactionIdOffset);
          fbb.addOffset(14, importIdOffset);
          fbb.addOffset(15, importPayeeNameOffset);
          fbb.addOffset(16, importPayeeNameOriginalOffset);
          fbb.addOffset(17, debtTransactionTypeOffset);
          fbb.addBool(18, object.deleted);
          fbb.addInt64(19, object.transferAccountId.targetId);
          fbb.addInt64(20, object.transferTransactionId.targetId);
          fbb.addInt64(21, object.category.targetId);
          fbb.finish(fbb.endTable());
          return object.obxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final amountParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final memoParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final clearedParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final approvedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 16, false);
          final flagColorParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 18);
          final flagNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 20);
          final accountIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 22, '');
          final accountNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 24, '');
          final payeeIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 26);
          final payeeNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 28);
          final matchedTransactionIdParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 30);
          final importIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 32);
          final importPayeeNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 34);
          final importPayeeNameOriginalParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 36);
          final debtTransactionTypeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 38);
          final deletedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 40, false);
          final object = YnabTransaction(
              id: idParam,
              date: dateParam,
              amount: amountParam,
              memo: memoParam,
              cleared: clearedParam,
              approved: approvedParam,
              flagColor: flagColorParam,
              flagName: flagNameParam,
              accountId: accountIdParam,
              accountName: accountNameParam,
              payeeId: payeeIdParam,
              payeeName: payeeNameParam,
              matchedTransactionId: matchedTransactionIdParam,
              importId: importIdParam,
              importPayeeName: importPayeeNameParam,
              importPayeeNameOriginal: importPayeeNameOriginalParam,
              debtTransactionType: debtTransactionTypeParam,
              deleted: deletedParam)
            ..obxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.transferAccountId.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 42, 0);
          object.transferAccountId.attach(store);
          object.transferTransactionId.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 44, 0);
          object.transferTransactionId.attach(store);
          object.category.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 46, 0);
          object.category.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<YnabTransaction>(
              object.subtransactions,
              store,
              obx_int.RelInfo<YnabSubtransaction>.toOneBacklink(
                  11,
                  object.obxId,
                  (YnabSubtransaction srcObject) => srcObject.transaction));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AppSettings] entity fields to define ObjectBox queries.
class AppSettings_ {
  /// see [AppSettings.obxId]
  static final obxId =
      obx.QueryIntegerProperty<AppSettings>(_entities[0].properties[0]);

  /// see [AppSettings.name]
  static final name =
      obx.QueryStringProperty<AppSettings>(_entities[0].properties[1]);

  /// see [AppSettings.dbValue]
  static final dbValue =
      obx.QueryStringProperty<AppSettings>(_entities[0].properties[2]);

  /// see [AppSettings.dbType]
  static final dbType =
      obx.QueryIntegerProperty<AppSettings>(_entities[0].properties[3]);
}

/// [YnabAccount] entity fields to define ObjectBox queries.
class YnabAccount_ {
  /// see [YnabAccount.obxId]
  static final obxId =
      obx.QueryIntegerProperty<YnabAccount>(_entities[1].properties[0]);

  /// see [YnabAccount.id]
  static final id =
      obx.QueryStringProperty<YnabAccount>(_entities[1].properties[1]);

  /// see [YnabAccount.name]
  static final name =
      obx.QueryStringProperty<YnabAccount>(_entities[1].properties[2]);

  /// see [YnabAccount.type]
  static final type =
      obx.QueryStringProperty<YnabAccount>(_entities[1].properties[3]);

  /// see [YnabAccount.onBudget]
  static final onBudget =
      obx.QueryBooleanProperty<YnabAccount>(_entities[1].properties[4]);

  /// see [YnabAccount.closed]
  static final closed =
      obx.QueryBooleanProperty<YnabAccount>(_entities[1].properties[5]);

  /// see [YnabAccount.note]
  static final note =
      obx.QueryStringProperty<YnabAccount>(_entities[1].properties[6]);

  /// see [YnabAccount.balance]
  static final balance =
      obx.QueryIntegerProperty<YnabAccount>(_entities[1].properties[7]);

  /// see [YnabAccount.clearedBalance]
  static final clearedBalance =
      obx.QueryIntegerProperty<YnabAccount>(_entities[1].properties[8]);

  /// see [YnabAccount.unclearedBalance]
  static final unclearedBalance =
      obx.QueryIntegerProperty<YnabAccount>(_entities[1].properties[9]);

  /// see [YnabAccount.transferPayeeId]
  static final transferPayeeId =
      obx.QueryStringProperty<YnabAccount>(_entities[1].properties[10]);

  /// see [YnabAccount.directImportLinked]
  static final directImportLinked =
      obx.QueryBooleanProperty<YnabAccount>(_entities[1].properties[11]);

  /// see [YnabAccount.directImportInError]
  static final directImportInError =
      obx.QueryBooleanProperty<YnabAccount>(_entities[1].properties[12]);

  /// see [YnabAccount.lastReconciledAt]
  static final lastReconciledAt =
      obx.QueryDateProperty<YnabAccount>(_entities[1].properties[13]);

  /// see [YnabAccount.deleted]
  static final deleted =
      obx.QueryBooleanProperty<YnabAccount>(_entities[1].properties[14]);
}

/// [YnabBudget] entity fields to define ObjectBox queries.
class YnabBudget_ {
  /// see [YnabBudget.obxId]
  static final obxId =
      obx.QueryIntegerProperty<YnabBudget>(_entities[2].properties[0]);

  /// see [YnabBudget.id]
  static final id =
      obx.QueryStringProperty<YnabBudget>(_entities[2].properties[1]);

  /// see [YnabBudget.name]
  static final name =
      obx.QueryStringProperty<YnabBudget>(_entities[2].properties[2]);

  /// see [YnabBudget.lastModifiedOn]
  static final lastModifiedOn =
      obx.QueryDateProperty<YnabBudget>(_entities[2].properties[3]);

  /// see [YnabBudget.firstMonth]
  static final firstMonth =
      obx.QueryStringProperty<YnabBudget>(_entities[2].properties[4]);

  /// see [YnabBudget.lastMonth]
  static final lastMonth =
      obx.QueryStringProperty<YnabBudget>(_entities[2].properties[5]);

  /// see [YnabBudget.dateFormat]
  static final dateFormat =
      obx.QueryStringProperty<YnabBudget>(_entities[2].properties[6]);

  /// see [YnabBudget.dbCurrencyFormat]
  static final dbCurrencyFormat =
      obx.QueryStringProperty<YnabBudget>(_entities[2].properties[7]);
}

/// [YnabCategory] entity fields to define ObjectBox queries.
class YnabCategory_ {
  /// see [YnabCategory.obxId]
  static final obxId =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[0]);

  /// see [YnabCategory.id]
  static final id =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[1]);

  /// see [YnabCategory.categoryGroup]
  static final categoryGroup =
      obx.QueryRelationToOne<YnabCategory, YnabCategoryGroup>(
          _entities[3].properties[2]);

  /// see [YnabCategory.name]
  static final name =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[3]);

  /// see [YnabCategory.hidden]
  static final hidden =
      obx.QueryBooleanProperty<YnabCategory>(_entities[3].properties[4]);

  /// see [YnabCategory.originalCategoryGroupId]
  static final originalCategoryGroupId =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[5]);

  /// see [YnabCategory.note]
  static final note =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[6]);

  /// see [YnabCategory.budgeted]
  static final budgeted =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[7]);

  /// see [YnabCategory.activity]
  static final activity =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[8]);

  /// see [YnabCategory.balance]
  static final balance =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[9]);

  /// see [YnabCategory.goalType]
  static final goalType =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[10]);

  /// see [YnabCategory.goalDay]
  static final goalDay =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[11]);

  /// see [YnabCategory.goalCadence]
  static final goalCadence =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[12]);

  /// see [YnabCategory.goalCadenceFrequency]
  static final goalCadenceFrequency =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[13]);

  /// see [YnabCategory.goalCreationMonth]
  static final goalCreationMonth =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[14]);

  /// see [YnabCategory.goalTarget]
  static final goalTarget =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[15]);

  /// see [YnabCategory.goalTargetMonth]
  static final goalTargetMonth =
      obx.QueryStringProperty<YnabCategory>(_entities[3].properties[16]);

  /// see [YnabCategory.goalPercentageComplete]
  static final goalPercentageComplete =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[17]);

  /// see [YnabCategory.goalMonthsToBudget]
  static final goalMonthsToBudget =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[18]);

  /// see [YnabCategory.goalUnderFunded]
  static final goalUnderFunded =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[19]);

  /// see [YnabCategory.goalOverallFunded]
  static final goalOverallFunded =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[20]);

  /// see [YnabCategory.goalOverallLeft]
  static final goalOverallLeft =
      obx.QueryIntegerProperty<YnabCategory>(_entities[3].properties[21]);

  /// see [YnabCategory.deleted]
  static final deleted =
      obx.QueryBooleanProperty<YnabCategory>(_entities[3].properties[22]);
}

/// [YnabCategoryGroup] entity fields to define ObjectBox queries.
class YnabCategoryGroup_ {
  /// see [YnabCategoryGroup.obxId]
  static final obxId =
      obx.QueryIntegerProperty<YnabCategoryGroup>(_entities[4].properties[0]);

  /// see [YnabCategoryGroup.id]
  static final id =
      obx.QueryStringProperty<YnabCategoryGroup>(_entities[4].properties[1]);

  /// see [YnabCategoryGroup.name]
  static final name =
      obx.QueryStringProperty<YnabCategoryGroup>(_entities[4].properties[2]);

  /// see [YnabCategoryGroup.hidden]
  static final hidden =
      obx.QueryBooleanProperty<YnabCategoryGroup>(_entities[4].properties[3]);

  /// see [YnabCategoryGroup.deleted]
  static final deleted =
      obx.QueryBooleanProperty<YnabCategoryGroup>(_entities[4].properties[4]);

  /// see [YnabCategoryGroup.categories]
  static final categories =
      obx.QueryBacklinkToMany<YnabCategory, YnabCategoryGroup>(
          YnabCategory_.categoryGroup);
}

/// [YnabSubtransaction] entity fields to define ObjectBox queries.
class YnabSubtransaction_ {
  /// see [YnabSubtransaction.obxId]
  static final obxId =
      obx.QueryIntegerProperty<YnabSubtransaction>(_entities[5].properties[0]);

  /// see [YnabSubtransaction.id]
  static final id =
      obx.QueryStringProperty<YnabSubtransaction>(_entities[5].properties[1]);

  /// see [YnabSubtransaction.amount]
  static final amount =
      obx.QueryIntegerProperty<YnabSubtransaction>(_entities[5].properties[2]);

  /// see [YnabSubtransaction.memo]
  static final memo =
      obx.QueryStringProperty<YnabSubtransaction>(_entities[5].properties[3]);

  /// see [YnabSubtransaction.payeeId]
  static final payeeId =
      obx.QueryStringProperty<YnabSubtransaction>(_entities[5].properties[4]);

  /// see [YnabSubtransaction.payeeName]
  static final payeeName =
      obx.QueryStringProperty<YnabSubtransaction>(_entities[5].properties[5]);

  /// see [YnabSubtransaction.deleted]
  static final deleted =
      obx.QueryBooleanProperty<YnabSubtransaction>(_entities[5].properties[6]);

  /// see [YnabSubtransaction.transferAccountId]
  static final transferAccountId =
      obx.QueryRelationToOne<YnabSubtransaction, YnabAccount>(
          _entities[5].properties[7]);

  /// see [YnabSubtransaction.transferTransactionId]
  static final transferTransactionId =
      obx.QueryRelationToOne<YnabSubtransaction, YnabTransaction>(
          _entities[5].properties[8]);

  /// see [YnabSubtransaction.category]
  static final category =
      obx.QueryRelationToOne<YnabSubtransaction, YnabCategory>(
          _entities[5].properties[9]);

  /// see [YnabSubtransaction.transaction]
  static final transaction =
      obx.QueryRelationToOne<YnabSubtransaction, YnabTransaction>(
          _entities[5].properties[10]);
}

/// [YnabTransaction] entity fields to define ObjectBox queries.
class YnabTransaction_ {
  /// see [YnabTransaction.obxId]
  static final obxId =
      obx.QueryIntegerProperty<YnabTransaction>(_entities[6].properties[0]);

  /// see [YnabTransaction.id]
  static final id =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[1]);

  /// see [YnabTransaction.date]
  static final date =
      obx.QueryDateProperty<YnabTransaction>(_entities[6].properties[2]);

  /// see [YnabTransaction.amount]
  static final amount =
      obx.QueryIntegerProperty<YnabTransaction>(_entities[6].properties[3]);

  /// see [YnabTransaction.memo]
  static final memo =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[4]);

  /// see [YnabTransaction.cleared]
  static final cleared =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[5]);

  /// see [YnabTransaction.approved]
  static final approved =
      obx.QueryBooleanProperty<YnabTransaction>(_entities[6].properties[6]);

  /// see [YnabTransaction.flagColor]
  static final flagColor =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[7]);

  /// see [YnabTransaction.flagName]
  static final flagName =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[8]);

  /// see [YnabTransaction.accountId]
  static final accountId =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[9]);

  /// see [YnabTransaction.accountName]
  static final accountName =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[10]);

  /// see [YnabTransaction.payeeId]
  static final payeeId =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[11]);

  /// see [YnabTransaction.payeeName]
  static final payeeName =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[12]);

  /// see [YnabTransaction.matchedTransactionId]
  static final matchedTransactionId =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[13]);

  /// see [YnabTransaction.importId]
  static final importId =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[14]);

  /// see [YnabTransaction.importPayeeName]
  static final importPayeeName =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[15]);

  /// see [YnabTransaction.importPayeeNameOriginal]
  static final importPayeeNameOriginal =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[16]);

  /// see [YnabTransaction.debtTransactionType]
  static final debtTransactionType =
      obx.QueryStringProperty<YnabTransaction>(_entities[6].properties[17]);

  /// see [YnabTransaction.deleted]
  static final deleted =
      obx.QueryBooleanProperty<YnabTransaction>(_entities[6].properties[18]);

  /// see [YnabTransaction.transferAccountId]
  static final transferAccountId =
      obx.QueryRelationToOne<YnabTransaction, YnabAccount>(
          _entities[6].properties[19]);

  /// see [YnabTransaction.transferTransactionId]
  static final transferTransactionId =
      obx.QueryRelationToOne<YnabTransaction, YnabTransaction>(
          _entities[6].properties[20]);

  /// see [YnabTransaction.category]
  static final category = obx.QueryRelationToOne<YnabTransaction, YnabCategory>(
      _entities[6].properties[21]);

  /// see [YnabTransaction.subtransactions]
  static final subtransactions =
      obx.QueryBacklinkToMany<YnabSubtransaction, YnabTransaction>(
          YnabSubtransaction_.transaction);
}
